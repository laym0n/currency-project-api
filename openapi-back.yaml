openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
paths:
  /plugins:
    post:
      tags:
        - Plugins
      operationId: add
      summary: добавление плагина в Pipeline
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PluginDto'
      responses:
        200:
          description: Плагин успешно добавлен в Pipeline
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PluginDto'
        400:
          $ref: '#/components/responses/BadRequest'
        500:
          $ref: '#/components/responses/ServerError'
    put:
      tags:
        - Plugins
      operationId: update
      summary: обновление плагина в Pipeline
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PluginDto'
      responses:
        200:
          description: Плагин успешно обновлен в Pipeline
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PluginDto'
        400:
          $ref: '#/components/responses/BadRequest'
        500:
          $ref: '#/components/responses/ServerError'
    get:
      tags:
        - Plugins
      operationId: findPlugins
      summary: поиск плагинов в Pipeline
      parameters:
        - in: query
          name: type
          description: тип плагина
          required: false
          schema:
            type: string
            enum: [AUTHENTICATION, PAYMENT, STATISTIC]
      responses:
        200:
          description: Успешно найдены плагины
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GetPluginsResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        500:
          $ref: '#/components/responses/ServerError'
  /plugins/{id}:
    delete:
      tags:
        - Plugins
      operationId: delete
      summary: удаление плагина в Pipeline
      parameters:
        - in: path
          name: id
          description: идентификатор плагина
          required: true
          schema:
            type: string
            format: uuid
            example: 0801a635-3dc9-4524-bdbc-1671d2bd2105
      responses:
        400:
          $ref: '#/components/responses/BadRequest'
        500:
          $ref: '#/components/responses/ServerError'
  /users:
    get:
      tags:
        - Users
      operationId: findUsers
      summary: поиск пользователей, пользующихся Pipeline'ом
      parameters:
        - in: query
          name: pageNumber
          description: номер запрашиваемой страницы
          required: false
          schema:
            type: integer
            minimum: 1
            default: 1
        - in: query
          name: pageSize
          description: размер запрашиваемой страницы
          required: false
          schema:
            type: integer
            minimum: 1
            default: 10
        - in: query
          name: sortField
          description: название поля для сортировки
          required: false
          schema:
            type: string
            enum: [balance]
        - in: query
          name: sort
          description: тип сортировки
          required: false
          schema:
            type: string
            enum: [ASC, DESC]
            default: DESC
      responses:
        200:
          description: Успешно найдены пользователи
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GetUsersResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        500:
          $ref: '#/components/responses/ServerError'

components:
  responses: 
    BadRequest:
      description: BadRequest
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ErrorDto'
    ServerError:
      description: ошибка на сервере
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ErrorDto'
  schemas:
    PluginDto:
      type: object
      description: плагин, работающий в Pipeline
      properties:
        id:
          type: string
          format: uuid
          description: идентификатор плагина
          example: 0801a635-3dc9-4524-bdbc-1671d2bd2105
        host:
          type: string
          description: хост для запросов к плагину
          example: http://localhost:8080
        type:
          $ref: '#/components/schemas/PluginType'
      required:
        - host
        - type

    PluginType:
      enum: [AUTHENTICATION, PAYMENT, STATISTIC]

    UserDto:
      type: object
      description: пользователь валюты
      properties:
        id:
          type: string
          format: uuid
          description: идентификатор пользователя
          example: 0801a635-3dc9-4524-bdbc-1671d2bd2105
        balance:
          type: string
          format: decimal
          description: текущий баланс пользователя
      required:
        - id
        - balance

    ErrorDto:
      type: object
      description: описание ошибки
      properties:
        title:
          type: string
          description: заголовок ошибки
          example: NullPointerException
        description:
          type: string
          description: описание ошибки
      required:
        - title
        - description

    GetPluginsResponse:
      type: object
      description: ответ на поиск плагинов
      properties:
        plugins:
          type: array
          items:
            $ref: '#/components/schemas/PluginDto'

    GetUsersResponse:
      type: object
      description: ответ на поиск пользователей
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/UserDto'

    PaginationDto:
      type: object
      description: пагинация
      properties:
        totalNumber:
          type: integer
          description: общее количество элементов
        pageSize:
          type: integer
          description: размер страницы
          minimum: 1
          default: 10
        pageCount:
          type: integer
          description: общее количество страниц
        pageNumber:
          type: integer
          description: номер текущей страницы
          minimum: 1
